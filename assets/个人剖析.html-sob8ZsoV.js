import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as o,f as e}from"./app-XffPLay1.js";const a={},r=e('<h2 id="优势" tabindex="-1"><a class="header-anchor" href="#优势" aria-hidden="true">#</a> 优势</h2><ol><li>喜欢解决问题的过程。</li></ol><h2 id="技术方面要突出的点" tabindex="-1"><a class="header-anchor" href="#技术方面要突出的点" aria-hidden="true">#</a> 技术方面要突出的点</h2><ol><li><p>有多个项目实战经验，多个项目上线的经验(从需求分析、设计、再到编码、测试和部署)每个环节，我都起着一定的作用。</p><ol><li>适当谦虚点(当然，相对来说，跟我们大公司来比的话，那这些项目要简单许多)</li></ol></li><li><p>设备的安装、配置，以及数据的接受</p><ol><li>摄像头、硬盘录像机、水质检测设备、泵站等</li><li>网络的配置、数据的接受</li><li>在这个过程中，涉及许多网络的问题，同时也将很多网络的知识</li></ol></li><li></li></ol><h2 id="两段实习" tabindex="-1"><a class="header-anchor" href="#两段实习" aria-hidden="true">#</a> 两段实习</h2><p><strong>北京荣大科技有限公司</strong> （后端开发实习生）</p><ol><li><p>接口优化</p></li><li><p>使用策略模式进行优化</p></li></ol><p><strong>安徽清洛数字科技有限公司</strong> (全栈开发实习生)</p><ol><li>重新设计并优化公司官网的加载速度</li><li>主导二十埠河流域水环境监管平台的开发</li></ol><h2 id="学习-阅读spring框架的好处" tabindex="-1"><a class="header-anchor" href="#学习-阅读spring框架的好处" aria-hidden="true">#</a> 学习/阅读Spring框架的好处</h2><ol><li>方法命名： <ol><li>getBean</li><li>具体干实事的是<code>doGetBean</code></li></ol></li><li>原来程序中可以写递归： <ol><li>程序中应该避免无终止递归，并且也要在资源有限的情况下结束递归。</li></ol></li><li>大量的设计模式</li></ol><blockquote><p>引申：</p><ol><li>阅读源码之后学到了好多，见识到了好多。 <ol><li>在阅读ThreadPoolExecutor中四种拒绝策略的源码时，也发现他们使用了拒绝策略的设计模式</li><li>在阅读ThreadLocalMap的源码时，注意到了并不是解决哈希冲突的时候就一定会拉链法，也有可能使用开放取址法</li></ol></li></ol></blockquote>',12),t=[r];function n(d,c){return i(),o("div",null,t)}const p=l(a,[["render",n],["__file","个人剖析.html.vue"]]);export{p as default};
