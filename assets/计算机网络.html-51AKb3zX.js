const l=JSON.parse(`{"key":"v-11f216b9","path":"/interview/A2-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html","title":"一、HTTP","lang":"zh-CN","frontmatter":{"description":"前言 双工/单工问题 在任何一个时刻，如果数据只能单向发送，称为单工 如果在某个时刻，数据可以向一个方向传输，也可以向另一个方向传输，并且交替进行，那就成为是半双工（Http、UDP） 它实际上是一种切换方向的单工通信 如果在任何时刻数据都可以双向收发，称为全双工（TCP、WebSocket）","head":[["meta",{"property":"og:url","content":"https://yuejinzhao.cn/interview/A2-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html"}],["meta",{"property":"og:site_name","content":"Honyelchak's Blog"}],["meta",{"property":"og:title","content":"一、HTTP"}],["meta",{"property":"og:description","content":"前言 双工/单工问题 在任何一个时刻，如果数据只能单向发送，称为单工 如果在某个时刻，数据可以向一个方向传输，也可以向另一个方向传输，并且交替进行，那就成为是半双工（Http、UDP） 它实际上是一种切换方向的单工通信 如果在任何时刻数据都可以双向收发，称为全双工（TCP、WebSocket）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-02T09:42:10.000Z"}],["meta",{"property":"article:author","content":"Honyelchak"}],["meta",{"property":"article:modified_time","content":"2023-12-02T09:42:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一、HTTP\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-02T09:42:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Honyelchak\\",\\"url\\":\\"https://yuejinzhao.cn\\"}]}"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"双工/单工问题","slug":"双工-单工问题","link":"#双工-单工问题","children":[]},{"level":2,"title":"进程间通信、线程间通信","slug":"进程间通信、线程间通信","link":"#进程间通信、线程间通信","children":[{"level":3,"title":"进程间通信(5种)","slug":"进程间通信-5种","link":"#进程间通信-5种","children":[]},{"level":3,"title":"线程间通信(5种)","slug":"线程间通信-5种","link":"#线程间通信-5种","children":[]},{"level":3,"title":"两者的区别","slug":"两者的区别","link":"#两者的区别","children":[]}]},{"level":2,"title":"TCP/IP网络模型有几层(4)","slug":"tcp-ip网络模型有几层-4","link":"#tcp-ip网络模型有几层-4","children":[{"level":3,"title":"应用层","slug":"应用层","link":"#应用层","children":[]},{"level":3,"title":"传输层","slug":"传输层","link":"#传输层","children":[]},{"level":3,"title":"网络层","slug":"网络层","link":"#网络层","children":[]},{"level":3,"title":"网络接口层","slug":"网络接口层","link":"#网络接口层","children":[]}]},{"level":2,"title":"1.1 常见面试题","slug":"_1-1-常见面试题","link":"#_1-1-常见面试题","children":[{"level":3,"title":"HTTP基本概念","slug":"http基本概念","link":"#http基本概念","children":[]},{"level":3,"title":"GET与POST","slug":"get与post","link":"#get与post","children":[]},{"level":3,"title":"HTTP缓存方式","slug":"http缓存方式","link":"#http缓存方式","children":[]},{"level":3,"title":"HTTP特性","slug":"http特性","link":"#http特性","children":[]},{"level":3,"title":"HTTP与HTTPS","slug":"http与https","link":"#http与https","children":[]},{"level":3,"title":"HTTPS 解决了 HTTP 的哪些问题？","slug":"https-解决了-http-的哪些问题","link":"#https-解决了-http-的哪些问题","children":[]},{"level":3,"title":"HTTPS是如何建立连接的？期间交互了什么？","slug":"https是如何建立连接的-期间交互了什么","link":"#https是如何建立连接的-期间交互了什么","children":[]},{"level":3,"title":"HTTPS的应用数据是如何保证完整性的？","slug":"https的应用数据是如何保证完整性的","link":"#https的应用数据是如何保证完整性的","children":[]},{"level":3,"title":"HTTPS 一定安全可靠吗？","slug":"https-一定安全可靠吗","link":"#https-一定安全可靠吗","children":[]},{"level":3,"title":"HTTP/1.1、HTTP/2、HTTP/3 演变","slug":"http-1-1、http-2、http-3-演变","link":"#http-1-1、http-2、http-3-演变","children":[]}]},{"level":2,"title":"2.1 TCP三次握手与四次挥手","slug":"_2-1-tcp三次握手与四次挥手","link":"#_2-1-tcp三次握手与四次挥手","children":[{"level":3,"title":"TCP基本认识","slug":"tcp基本认识","link":"#tcp基本认识","children":[]},{"level":3,"title":"TCP连接建立","slug":"tcp连接建立","link":"#tcp连接建立","children":[]},{"level":3,"title":"TCP连接断开","slug":"tcp连接断开","link":"#tcp连接断开","children":[]}]},{"level":2,"title":"2.2 如何理解TCP是面向字节流协议？","slug":"_2-2-如何理解tcp是面向字节流协议","link":"#_2-2-如何理解tcp是面向字节流协议","children":[{"level":3,"title":"如何理解字节流？","slug":"如何理解字节流","link":"#如何理解字节流","children":[]},{"level":3,"title":"TCP中拆包、粘包的作用","slug":"tcp中拆包、粘包的作用","link":"#tcp中拆包、粘包的作用","children":[]}]},{"level":2,"title":"2.3、TCP重传、滑动窗口、流量控制、拥塞控制","slug":"_2-3、tcp重传、滑动窗口、流量控制、拥塞控制","link":"#_2-3、tcp重传、滑动窗口、流量控制、拥塞控制","children":[{"level":3,"title":"重传机制","slug":"重传机制","link":"#重传机制","children":[]},{"level":3,"title":"滑动窗口","slug":"滑动窗口","link":"#滑动窗口","children":[]},{"level":3,"title":"流量控制","slug":"流量控制","link":"#流量控制","children":[]},{"level":3,"title":"拥塞控制","slug":"拥塞控制","link":"#拥塞控制","children":[]}]},{"level":2,"title":"2.4、TCP半连接队列和全连接队列","slug":"_2-4、tcp半连接队列和全连接队列","link":"#_2-4、tcp半连接队列和全连接队列","children":[{"level":3,"title":"拒绝策略","slug":"拒绝策略","link":"#拒绝策略","children":[]}]},{"level":2,"title":"2.5、TCP连接，一端断电和进程崩溃有什么区别","slug":"_2-5、tcp连接-一端断电和进程崩溃有什么区别","link":"#_2-5、tcp连接-一端断电和进程崩溃有什么区别","children":[]},{"level":2,"title":"2.6、拔掉网线后，原本的TCP连接还存在吗？","slug":"_2-6、拔掉网线后-原本的tcp连接还存在吗","link":"#_2-6、拔掉网线后-原本的tcp连接还存在吗","children":[]},{"level":2,"title":"2.7、TCP和UDP可以使用同一个端口吗？","slug":"_2-7、tcp和udp可以使用同一个端口吗","link":"#_2-7、tcp和udp可以使用同一个端口吗","children":[{"level":3,"title":"IP地址的基础知识","slug":"ip地址的基础知识","link":"#ip地址的基础知识","children":[]},{"level":3,"title":"IP地址的分类","slug":"ip地址的分类","link":"#ip地址的分类","children":[]},{"level":3,"title":"无分类地址CIDR","slug":"无分类地址cidr","link":"#无分类地址cidr","children":[]}]},{"level":2,"title":"1、BIO","slug":"_1、bio","link":"#_1、bio","children":[]},{"level":2,"title":"2、NIO","slug":"_2、nio","link":"#_2、nio","children":[]},{"level":2,"title":"3、IO多路复用","slug":"_3、io多路复用","link":"#_3、io多路复用","children":[]},{"level":2,"title":"4、信号驱动IO","slug":"_4、信号驱动io","link":"#_4、信号驱动io","children":[]},{"level":2,"title":"5、异步IO","slug":"_5、异步io","link":"#_5、异步io","children":[]},{"level":2,"title":"五种模型对比","slug":"五种模型对比","link":"#五种模型对比","children":[]},{"level":2,"title":"Java中的实现","slug":"java中的实现","link":"#java中的实现","children":[{"level":3,"title":"NIO中如何实现IO多路复用","slug":"nio中如何实现io多路复用","link":"#nio中如何实现io多路复用","children":[]},{"level":3,"title":"基于NIO非阻塞代码案例","slug":"基于nio非阻塞代码案例","link":"#基于nio非阻塞代码案例","children":[]},{"level":3,"title":"NIO引入多路复用器版本","slug":"nio引入多路复用器版本","link":"#nio引入多路复用器版本","children":[]},{"level":3,"title":"1、单台服务器并发，TCP连接数可以有多少","slug":"_1、单台服务器并发-tcp连接数可以有多少","link":"#_1、单台服务器并发-tcp连接数可以有多少","children":[]}]},{"level":2,"title":"跨域","slug":"跨域","link":"#跨域","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"如何实现跨域请求？","slug":"如何实现跨域请求","link":"#如何实现跨域请求","children":[]}]}],"git":{"createdTime":1701499503000,"updatedTime":1701510130000,"contributors":[{"name":"honyelchak","email":"554417388@qq.com","commits":2}]},"readingTime":{"minutes":142.66,"words":42797},"filePathRelative":"interview/A2-计算机网络/计算机网络.md","localizedDate":"2023年12月2日","excerpt":"<h2> 前言</h2>\\n<h2> 双工/单工问题</h2>\\n<ol>\\n<li>\\n<p>在任何一个时刻，如果数据只能单向发送，称为<code>单工</code></p>\\n</li>\\n<li>\\n<p>如果在某个时刻，数据可以向一个方向传输，也可以向另一个方向传输，并且交替进行，那就成为是<code>半双工</code>（<mark>Http、UDP</mark>）</p>\\n<ol>\\n<li>它实际上是一种切换方向的单工通信</li>\\n</ol>\\n</li>\\n<li>\\n<p>如果在任何时刻数据都可以双向收发，称为<code>全双工</code>（<mark>TCP、WebSocket</mark>）</p>\\n</li>\\n</ol>","autoDesc":true}`);export{l as data};
