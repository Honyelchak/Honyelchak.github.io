const e=JSON.parse(`{"key":"v-e070bf92","path":"/interview/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html","title":"","lang":"zh-CN","frontmatter":{"description":"树 二叉查找树(Binary Search Tree) 二叉查找树也称为有序二叉查找树。 任何一个结点，左比他小，右比他大，标准搜索二叉树是没有重复值的。 查数很方便，如果左子树和右子树高度差不超过一，每次搜索都筛选掉一半了。如果不平衡，会退变为O(n)的算法。 img","head":[["meta",{"property":"og:url","content":"https://yuejinzhao.cn/interview/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html"}],["meta",{"property":"og:site_name","content":"Honyelchak's Blog"}],["meta",{"property":"og:description","content":"树 二叉查找树(Binary Search Tree) 二叉查找树也称为有序二叉查找树。 任何一个结点，左比他小，右比他大，标准搜索二叉树是没有重复值的。 查数很方便，如果左子树和右子树高度差不超过一，每次搜索都筛选掉一半了。如果不平衡，会退变为O(n)的算法。 img"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-02T06:45:03.000Z"}],["meta",{"property":"article:author","content":"Honyelchak"}],["meta",{"property":"article:modified_time","content":"2023-12-02T06:45:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-02T06:45:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Honyelchak\\",\\"url\\":\\"https://yuejinzhao.cn\\"}]}"]]},"headers":[{"level":2,"title":"树","slug":"树","link":"#树","children":[{"level":3,"title":"二叉查找树(Binary Search Tree)","slug":"二叉查找树-binary-search-tree","link":"#二叉查找树-binary-search-tree","children":[]},{"level":3,"title":"AVL","slug":"avl","link":"#avl","children":[]},{"level":3,"title":"红黑树","slug":"红黑树","link":"#红黑树","children":[]},{"level":3,"title":"B/B+树","slug":"b-b-树","link":"#b-b-树","children":[]}]}],"git":{"createdTime":1701499503000,"updatedTime":1701499503000,"contributors":[{"name":"honyelchak","email":"554417388@qq.com","commits":1}]},"readingTime":{"minutes":3.91,"words":1172},"filePathRelative":"interview/数据结构.md","localizedDate":"2023年12月2日","excerpt":"<h2> 树</h2>\\n<h3> 二叉查找树(Binary Search Tree)</h3>\\n<p>二叉查找树也称为<strong>有序二叉查找树</strong>。</p>\\n<p>任何一个结点，<strong>左比他小，右比他大</strong>，标准搜索二叉树是没有重复值的。</p>\\n<p>查数很方便，如果左子树和右子树高度差不超过一，每次搜索都筛选掉一半了。如果不平衡，会退变为O(n)的算法。</p>\\n<figure><img src=\\"https://img2018.cnblogs.com/blog/1135185/201902/1135185-20190226100951078-767929670.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>","autoDesc":true}`);export{e as data};
