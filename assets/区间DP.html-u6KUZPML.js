import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as n,f as a}from"./app-_dQeDwys.js";const l={},t=a(`<h1 id="区间dp" tabindex="-1"><a class="header-anchor" href="#区间dp" aria-hidden="true">#</a> 区间DP</h1><p>常用的两种做题思路：</p><ol><li><p>迭代式</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>for (int len = 1; len &lt;= n; len ++)
	for (int L = 1; L + len - 1 &lt;= n; L ++)
		R = L + len - 1;
		....
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>记忆化搜索</p></li></ol><h3 id="_1、石子合并" tabindex="-1"><a class="header-anchor" href="#_1、石子合并" aria-hidden="true">#</a> 1、石子合并</h3><h3 id="_2、环形石子合并" tabindex="-1"><a class="header-anchor" href="#_2、环形石子合并" aria-hidden="true">#</a> 2、环形石子合并</h3><blockquote><p>对于区间DP中环形转单链式的两种方式：</p><ol><li>**方式一(暴力)：**把环形中某两个相邻元素的连接线去除，将形成一个缺口，这样环就变成了链。即通过枚举环中任意两个相邻元素的连接点来化环为链。时间复杂度为O(<code>N^4</code>)</li><li>**方式二：**将环从某处切开，然后复制一份，头尾相连的形式，形成一个2n的单链。</li></ol></blockquote>`,6),d=[t];function r(c,o){return i(),n("div",null,d)}const _=e(l,[["render",r],["__file","区间DP.html.vue"]]);export{_ as default};
