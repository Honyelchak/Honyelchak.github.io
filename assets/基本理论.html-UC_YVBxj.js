const e=JSON.parse(`{"key":"v-203554df","path":"/algorithm/%E5%9B%BE/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/%E5%9F%BA%E6%9C%AC%E7%90%86%E8%AE%BA.html","title":"最小生成树","lang":"zh-CN","frontmatter":{"description":"最小生成树 最小生成树部分最基本的两个算法： Prim算法 Kruskal算法 可以用Prim的，一定可以用Kruskal算法。 最小生成树的理论基础： 任意一颗最小生成树一定可以包含无向图中权值最小的边。 给定一张无向图G=(v,e), n = |V|, m = |E|。从E中选出k &lt; n - 1条边构成G的加一个生成森林。","head":[["meta",{"property":"og:url","content":"https://yuejinzhao.cn/algorithm/%E5%9B%BE/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/%E5%9F%BA%E6%9C%AC%E7%90%86%E8%AE%BA.html"}],["meta",{"property":"og:site_name","content":"Honyelchak's Blog"}],["meta",{"property":"og:title","content":"最小生成树"}],["meta",{"property":"og:description","content":"最小生成树 最小生成树部分最基本的两个算法： Prim算法 Kruskal算法 可以用Prim的，一定可以用Kruskal算法。 最小生成树的理论基础： 任意一颗最小生成树一定可以包含无向图中权值最小的边。 给定一张无向图G=(v,e), n = |V|, m = |E|。从E中选出k &lt; n - 1条边构成G的加一个生成森林。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-02T06:45:03.000Z"}],["meta",{"property":"article:author","content":"Honyelchak"}],["meta",{"property":"article:modified_time","content":"2023-12-02T06:45:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"最小生成树\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-02T06:45:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Honyelchak\\",\\"url\\":\\"https://yuejinzhao.cn\\"}]}"]]},"headers":[{"level":2,"title":"Prim算法","slug":"prim算法","link":"#prim算法","children":[{"level":3,"title":"朴素版本","slug":"朴素版本","link":"#朴素版本","children":[]},{"level":3,"title":"堆优化版本","slug":"堆优化版本","link":"#堆优化版本","children":[]}]},{"level":2,"title":"Kruskal算法","slug":"kruskal算法","link":"#kruskal算法","children":[]}],"git":{"createdTime":1701499503000,"updatedTime":1701499503000,"contributors":[{"name":"honyelchak","email":"554417388@qq.com","commits":1}]},"readingTime":{"minutes":0.53,"words":160},"filePathRelative":"algorithm/图/最小生成树/基本理论.md","localizedDate":"2023年12月2日","excerpt":"<h1> 最小生成树</h1>\\n<p>最小生成树部分最基本的两个算法：</p>\\n<ul>\\n<li>Prim算法</li>\\n<li>Kruskal算法</li>\\n</ul>\\n<p>可以用Prim的，一定可以用Kruskal算法。</p>\\n<p>最小生成树的理论基础：</p>\\n<ol>\\n<li>任意一颗最小生成树一定可以包含无向图中权值最小的边。</li>\\n<li>给定一张无向图<code>G=(v,e), n = |V|, m = |E|</code>。从<code>E</code>中选出<code>k &lt; n -  1</code>条边构成<code>G</code>的加一个生成森林。</li>\\n</ol>","autoDesc":true}`);export{e as data};
