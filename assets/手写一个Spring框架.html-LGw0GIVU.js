const e=JSON.parse(`{"key":"v-66f4f202","path":"/interview/A5-Spring/%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AASpring%E6%A1%86%E6%9E%B6.html","title":"手写Spring框架","lang":"zh-CN","frontmatter":{"description":"Spring在创建对象的时候， 主要先进行扫描 UserService.class ---&gt; 无参构造方法 ---&gt;普通对象---&gt;依赖注入（属性赋值、BeanNameAware接口、BeanClassLoaderAware接口、BeanFactoryAware接口）---&gt;初始化前（postconstruct)---&gt;初始化（initializingBean)---&gt;初始化后（aop)---&gt;代理对象---&gt;Bean 实现 Bean 的创建和管理：Spring 框架的核心是 Bean 容器，需要实现 Bean 的创建、初始化、销毁等功能。可以通过反射来实现 Bean 的创建，使用工厂模式来管理 Bean 对象。 实现依赖注入：依赖注入是 Spring 框架的核心功能之一，需要实现自动装配和注入 Bean 之间的依赖关系。可以使用反射和注解来实现依赖注入，实现对 Bean 之间的依赖关系进行自动装配。 实现 AOP 功能：AOP 是 Spring 框架的另一个核心功能，需要实现切面编程、方法拦截、事务管理等功能。可以使用动态代理和字节码增强等技术来实现 AOP 功能。 实现 Web MVC：Web MVC 是 Spring 框架的重要组成部分，需要实现请求映射、控制器、视图解析器等功能。可以使用 Servlet 和 JSP 技术来实现 Web MVC 功能。","head":[["meta",{"property":"og:url","content":"https://yuejinzhao.cn/interview/A5-Spring/%E6%89%8B%E5%86%99%E4%B8%80%E4%B8%AASpring%E6%A1%86%E6%9E%B6.html"}],["meta",{"property":"og:site_name","content":"Honyelchak's Blog"}],["meta",{"property":"og:title","content":"手写Spring框架"}],["meta",{"property":"og:description","content":"Spring在创建对象的时候， 主要先进行扫描 UserService.class ---&gt; 无参构造方法 ---&gt;普通对象---&gt;依赖注入（属性赋值、BeanNameAware接口、BeanClassLoaderAware接口、BeanFactoryAware接口）---&gt;初始化前（postconstruct)---&gt;初始化（initializingBean)---&gt;初始化后（aop)---&gt;代理对象---&gt;Bean 实现 Bean 的创建和管理：Spring 框架的核心是 Bean 容器，需要实现 Bean 的创建、初始化、销毁等功能。可以通过反射来实现 Bean 的创建，使用工厂模式来管理 Bean 对象。 实现依赖注入：依赖注入是 Spring 框架的核心功能之一，需要实现自动装配和注入 Bean 之间的依赖关系。可以使用反射和注解来实现依赖注入，实现对 Bean 之间的依赖关系进行自动装配。 实现 AOP 功能：AOP 是 Spring 框架的另一个核心功能，需要实现切面编程、方法拦截、事务管理等功能。可以使用动态代理和字节码增强等技术来实现 AOP 功能。 实现 Web MVC：Web MVC 是 Spring 框架的重要组成部分，需要实现请求映射、控制器、视图解析器等功能。可以使用 Servlet 和 JSP 技术来实现 Web MVC 功能。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-02T09:42:10.000Z"}],["meta",{"property":"article:author","content":"Honyelchak"}],["meta",{"property":"article:modified_time","content":"2023-12-02T09:42:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手写Spring框架\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-02T09:42:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Honyelchak\\",\\"url\\":\\"https://yuejinzhao.cn\\"}]}"]]},"headers":[{"level":2,"title":"BeanDefinition(接口)","slug":"beandefinition-接口","link":"#beandefinition-接口","children":[{"level":3,"title":"Spring中定义Bean的方式","slug":"spring中定义bean的方式","link":"#spring中定义bean的方式","children":[]},{"level":3,"title":"BeanDefinition实现类","slug":"beandefinition实现类","link":"#beandefinition实现类","children":[]}]},{"level":2,"title":"BeanDefinitionReader(接口)","slug":"beandefinitionreader-接口","link":"#beandefinitionreader-接口","children":[{"level":3,"title":"AnnotatedBeanDefinitionReader","slug":"annotatedbeandefinitionreader","link":"#annotatedbeandefinitionreader","children":[]},{"level":3,"title":"XmlBeanDefinitionReader","slug":"xmlbeandefinitionreader","link":"#xmlbeandefinitionreader","children":[]},{"level":3,"title":"ClassPathBeanDefinitionScanner","slug":"classpathbeandefinitionscanner","link":"#classpathbeandefinitionscanner","children":[]}]},{"level":2,"title":"BeanFactory(接口)","slug":"beanfactory-接口","link":"#beanfactory-接口","children":[]},{"level":2,"title":"ApplicationContext(接口)","slug":"applicationcontext-接口","link":"#applicationcontext-接口","children":[{"level":3,"title":"实现类","slug":"实现类","link":"#实现类","children":[]},{"level":3,"title":"国际化","slug":"国际化","link":"#国际化","children":[]},{"level":3,"title":"资源加载","slug":"资源加载","link":"#资源加载","children":[]},{"level":3,"title":"获取运行时环境","slug":"获取运行时环境","link":"#获取运行时环境","children":[]},{"level":3,"title":"事件发布","slug":"事件发布","link":"#事件发布","children":[]}]},{"level":2,"title":"类型转化","slug":"类型转化","link":"#类型转化","children":[{"level":3,"title":"PropertyEditor(JDK)","slug":"propertyeditor-jdk","link":"#propertyeditor-jdk","children":[]},{"level":3,"title":"ConversionService","slug":"conversionservice","link":"#conversionservice","children":[]},{"level":3,"title":"TypeConverter","slug":"typeconverter","link":"#typeconverter","children":[]}]},{"level":2,"title":"OrderComparator","slug":"ordercomparator","link":"#ordercomparator","children":[{"level":3,"title":"使用Ordered接口","slug":"使用ordered接口","link":"#使用ordered接口","children":[]},{"level":3,"title":"使用@Order注解","slug":"使用-order注解","link":"#使用-order注解","children":[]}]},{"level":2,"title":"BeanPostProcessor","slug":"beanpostprocessor","link":"#beanpostprocessor","children":[]},{"level":2,"title":"BeanFactoryPostProcessor","slug":"beanfactorypostprocessor","link":"#beanfactorypostprocessor","children":[]},{"level":2,"title":"FactoryBean","slug":"factorybean","link":"#factorybean","children":[]},{"level":2,"title":"ExcludeFilter和IncludeFilter","slug":"excludefilter和includefilter","link":"#excludefilter和includefilter","children":[]},{"level":2,"title":"MetadataReader、ClassMetadata、AnnotationMetadata","slug":"metadatareader、classmetadata、annotationmetadata","link":"#metadatareader、classmetadata、annotationmetadata","children":[{"level":3,"title":"补充：神奇的ASM","slug":"补充-神奇的asm","link":"#补充-神奇的asm","children":[]},{"level":3,"title":"补充：CandidateComponentsIndexLoader避免扫描","slug":"补充-candidatecomponentsindexloader避免扫描","link":"#补充-candidatecomponentsindexloader避免扫描","children":[]}]},{"level":2,"title":"Bean的生成过程","slug":"bean的生成过程","link":"#bean的生成过程","children":[{"level":3,"title":"1. 扫描并生成BeanDefinition","slug":"_1-扫描并生成beandefinition","link":"#_1-扫描并生成beandefinition","children":[]},{"level":3,"title":"2. 合并BeanDefinition","slug":"_2-合并beandefinition","link":"#_2-合并beandefinition","children":[]},{"level":3,"title":"3. 加载类","slug":"_3-加载类","link":"#_3-加载类","children":[]},{"level":3,"title":"4. 实例化前","slug":"_4-实例化前","link":"#_4-实例化前","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]},{"level":3,"title":"5. 实例化","slug":"_5-实例化","link":"#_5-实例化","children":[]},{"level":3,"title":"5.1 Supplier创建对象","slug":"_5-1-supplier创建对象","link":"#_5-1-supplier创建对象","children":[]},{"level":3,"title":"5.2 工厂方法创建对象","slug":"_5-2-工厂方法创建对象","link":"#_5-2-工厂方法创建对象","children":[]},{"level":3,"title":"5.3 推断构造方法","slug":"_5-3-推断构造方法","link":"#_5-3-推断构造方法","children":[]},{"level":3,"title":"6. BeanDefinition的后置处理","slug":"_6-beandefinition的后置处理","link":"#_6-beandefinition的后置处理","children":[]},{"level":3,"title":"7. 实例化后","slug":"_7-实例化后","link":"#_7-实例化后","children":[]},{"level":3,"title":"8. 自动注入","slug":"_8-自动注入","link":"#_8-自动注入","children":[]},{"level":3,"title":"9. 处理属性","slug":"_9-处理属性","link":"#_9-处理属性","children":[]},{"level":3,"title":"10. 执行Aware","slug":"_10-执行aware","link":"#_10-执行aware","children":[]},{"level":3,"title":"11. 初始化前","slug":"_11-初始化前","link":"#_11-初始化前","children":[]},{"level":3,"title":"12. 初始化","slug":"_12-初始化","link":"#_12-初始化","children":[]},{"level":3,"title":"13. 初始化后","slug":"_13-初始化后","link":"#_13-初始化后","children":[]},{"level":3,"title":"总结BeanPostProcessor","slug":"总结beanpostprocessor","link":"#总结beanpostprocessor","children":[]}]},{"level":2,"title":"getBean","slug":"getbean","link":"#getbean","children":[{"level":3,"title":"doGetBean()","slug":"dogetbean","link":"#dogetbean","children":[]},{"level":3,"title":"createBean()","slug":"createbean","link":"#createbean","children":[]},{"level":3,"title":"doCreateBean()","slug":"docreatebean","link":"#docreatebean","children":[]}]},{"level":2,"title":"Bean销毁","slug":"bean销毁","link":"#bean销毁","children":[]},{"level":2,"title":"依赖注入","slug":"依赖注入","link":"#依赖注入","children":[{"level":3,"title":"@Bean方法注入(国企)","slug":"bean方法注入-国企","link":"#bean方法注入-国企","children":[]}]}],"git":{"createdTime":1701499503000,"updatedTime":1701510130000,"contributors":[{"name":"honyelchak","email":"554417388@qq.com","commits":2}]},"readingTime":{"minutes":38.34,"words":11502},"filePathRelative":"interview/A5-Spring/手写一个Spring框架.md","localizedDate":"2023年12月2日","excerpt":"<blockquote>\\n<p>Spring在创建对象的时候，</p>\\n<p>主要先进行扫描</p>\\n<p>UserService.class ---&gt; 无参构造方法 ---&gt;普通对象---&gt;依赖注入（属性赋值、BeanNameAware接口、BeanClassLoaderAware接口、BeanFactoryAware接口）---&gt;初始化前（postconstruct)---&gt;初始化（initializingBean)---&gt;初始化后（aop)---&gt;代理对象---&gt;Bean</p>\\n</blockquote>\\n<ol>\\n<li>实现 Bean 的创建和管理：Spring 框架的核心是 Bean 容器，需要实现 Bean 的创建、初始化、销毁等功能。可以通过反射来实现 Bean 的创建，使用工厂模式来管理 Bean 对象。</li>\\n<li>实现依赖注入：依赖注入是 Spring 框架的核心功能之一，需要实现自动装配和注入 Bean 之间的依赖关系。可以使用反射和注解来实现依赖注入，实现对 Bean 之间的依赖关系进行自动装配。</li>\\n<li>实现 AOP 功能：AOP 是 Spring 框架的另一个核心功能，需要实现切面编程、方法拦截、事务管理等功能。可以使用动态代理和字节码增强等技术来实现 AOP 功能。</li>\\n<li>实现 Web MVC：Web MVC 是 Spring 框架的重要组成部分，需要实现请求映射、控制器、视图解析器等功能。可以使用 Servlet 和 JSP 技术来实现 Web MVC 功能。</li>\\n</ol>","autoDesc":true}`);export{e as data};
