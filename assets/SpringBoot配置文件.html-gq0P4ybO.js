import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as o}from"./app-2Xbp2Heq.js";const t={},p=o(`<h1 id="springboot配置流程" tabindex="-1"><a class="header-anchor" href="#springboot配置流程" aria-hidden="true">#</a> SpringBoot配置流程</h1><h2 id="springbootapplication" tabindex="-1"><a class="header-anchor" href="#springbootapplication" aria-hidden="true">#</a> @SpringBootApplication</h2><p><code>@SpringBootApplication</code>注解中包含了</p><ul><li><code>@SpringBootConfiguration</code><ul><li>打开之后是<code>@Configuration</code></li></ul></li><li><code>@EnableAutoConfiguration</code></li><li><code>@ComponentScan</code></li></ul><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> @Configuration</h3><p>JavaConfig形式的SpringIOC容器的配置类使用的那个<code>@Configuration</code>,SpringBoot社区推荐使用基于JavaConfig的配置形式，所以这里的启动类标注了<code>@Configuration</code>之后，本身其实也是一个IOC容器的配置类。</p><ul><li>XML声明和定义配置方式：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">?</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>beans xmlns<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/beans&quot;</span>
	xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> xmlns<span class="token operator">:</span>aop<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/aop&quot;</span>
	xmlns<span class="token operator">:</span>context<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/context&quot;</span> xmlns<span class="token operator">:</span>tx<span class="token operator">=</span><span class="token string">&quot;http://www.springframework.org/schema/tx&quot;</span>
	xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span>&quot;http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans 
						http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>beans<span class="token operator">/</span>spring<span class="token operator">-</span>beans<span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">.</span>xsd
						http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>aop 
						http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>aop<span class="token operator">/</span>spring<span class="token operator">-</span>aop<span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">.</span>xsd
						http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>context 
						http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>context<span class="token operator">/</span>spring<span class="token operator">-</span>context<span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">.</span>xsd
						http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>tx 
						http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>org<span class="token operator">/</span>schema<span class="token operator">/</span>tx<span class="token operator">/</span>spring<span class="token operator">-</span>tx<span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">.</span>xsd
	&quot;<span class="token operator">&gt;</span>
	<span class="token operator">&lt;</span>bean id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;com...&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>用一个过滤器举例，JavaConfig的配置方式是这样：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DruidConfiguration</span> <span class="token punctuation">{</span>    
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span> <span class="token function">statFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//创建过滤器</span>
        <span class="token class-name">FilterRegistrationBean</span> filterRegistrationBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebStatFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置过滤器过滤路径</span>
        filterRegistrationBean<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//忽略过滤的形式</span>
        filterRegistrationBean<span class="token punctuation">.</span><span class="token function">addInitParameter</span><span class="token punctuation">(</span><span class="token string">&quot;exclusions&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> filterRegistrationBean<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>重点：</strong></p><ul><li><strong>任何一个标注了@Configuration的Java类定义都是一个JavaConfig配置类。</strong><ul><li>多个配置类可使用import进行合并</li></ul></li><li><mark><strong>任何一个标注了@Bean的方法，其返回值将作为一个bean定义注册到Spring的IoC容器，方法名将默认成该bean定义的id。</strong></mark></li></ul><hr><h3 id="componentscan" tabindex="-1"><a class="header-anchor" href="#componentscan" aria-hidden="true">#</a> @ComponentScan</h3><p>@ComponentScan对应XML配置中的元素，@ComponentScan的功能其实就是自动扫描并加载符合条件的组件（比如@Component和@Repository等）或者bean定义，最终将这些bean定义加载到IoC容器中。</p><p>我们可以通过basePackages等属性来细粒度的定制@ComponentScan自动扫描的范围，如果不指定，则<strong>默认Spring框架实现会从声明@ComponentScan所在类的package进行扫描。</strong></p><p>**Ps：**所以SpringBoot的启动类最好是放在root package下，因为默认不指定basePackages。</p><hr><h3 id="enableautoconfiguration" tabindex="-1"><a class="header-anchor" href="#enableautoconfiguration" aria-hidden="true">#</a> @EnableAutoConfiguration</h3><p>看英文意思就是自动配置，概括一下就是，借助@Import的帮助，将所有符合自动配置条件的bean定义加载到IoC容器。</p><p>一面 一面主要是问一些常规的问题，java基础，数据库基础的题目，还是比较简单的 二面 二面主要会问一些你的项目经验，具体你应用到了那些技术，如何克服难题等等</p>`,21),e=[p];function r(c,i){return a(),s("div",null,e)}const k=n(t,[["render",r],["__file","SpringBoot配置文件.html.vue"]]);export{k as default};
