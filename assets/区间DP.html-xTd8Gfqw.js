const e=JSON.parse(`{"key":"v-481274d2","path":"/algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP.html","title":"区间DP","lang":"zh-CN","frontmatter":{"description":"区间DP 常用的两种做题思路： 迭代式 for (int len = 1; len &lt;= n; len ++) \\tfor (int L = 1; L + len - 1 &lt;= n; L ++) \\t\\tR = L + len - 1; \\t\\t.... 记忆化搜索","head":[["meta",{"property":"og:url","content":"https://yuejinzhao.cn/algorithm/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E5%8C%BA%E9%97%B4DP.html"}],["meta",{"property":"og:site_name","content":"Honyelchak's Blog"}],["meta",{"property":"og:title","content":"区间DP"}],["meta",{"property":"og:description","content":"区间DP 常用的两种做题思路： 迭代式 for (int len = 1; len &lt;= n; len ++) \\tfor (int L = 1; L + len - 1 &lt;= n; L ++) \\t\\tR = L + len - 1; \\t\\t.... 记忆化搜索"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-02T06:45:03.000Z"}],["meta",{"property":"article:author","content":"Honyelchak"}],["meta",{"property":"article:modified_time","content":"2023-12-02T06:45:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"区间DP\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-02T06:45:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Honyelchak\\",\\"url\\":\\"https://yuejinzhao.cn\\"}]}"]]},"headers":[{"level":3,"title":"1、石子合并","slug":"_1、石子合并","link":"#_1、石子合并","children":[]},{"level":3,"title":"2、环形石子合并","slug":"_2、环形石子合并","link":"#_2、环形石子合并","children":[]}],"git":{"createdTime":1701499503000,"updatedTime":1701499503000,"contributors":[{"name":"honyelchak","email":"554417388@qq.com","commits":1}]},"readingTime":{"minutes":0.58,"words":175},"filePathRelative":"algorithm/动态规划/区间DP.md","localizedDate":"2023年12月2日","excerpt":"<h1> 区间DP</h1>\\n<p>常用的两种做题思路：</p>\\n<ol>\\n<li>\\n<p>迭代式</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>for (int len = 1; len &lt;= n; len ++)\\n\\tfor (int L = 1; L + len - 1 &lt;= n; L ++)\\n\\t\\tR = L + len - 1;\\n\\t\\t....\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>记忆化搜索</p>\\n</li>\\n</ol>","autoDesc":true}`);export{e as data};
