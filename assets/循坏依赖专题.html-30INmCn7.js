import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as i,f as n}from"./app-2Xbp2Heq.js";const t="/assets/image-20230802210901407-eKVOPWxD.png",o="/assets/image-20230802211518253-s4RuMfc-.png",s={},c=n('<h2 id="spring框架中的循环依赖" tabindex="-1"><a class="header-anchor" href="#spring框架中的循环依赖" aria-hidden="true">#</a> Spring框架中的循环依赖</h2><h3 id="dependson-无法解决" tabindex="-1"><a class="header-anchor" href="#dependson-无法解决" aria-hidden="true">#</a> @DependsOn(无法解决)</h3><p>简单来说，就是@DependsOn注解标识了在创建当前对象之前需要创建的对象，而若创建<code>需要创建的对象</code>需要先创建<code>当前对象</code>，那么就说明产生了循环依赖。</p><p>Spring框架在doGetBean方法中通过<code>isDependent()</code>给对DependsOn注解进行了循环依赖检查：</p><p>**解决方式：**直接抛出异常</p><figure><img src="'+t+'" alt="image-20230802210901407" tabindex="0" loading="lazy"><figcaption>image-20230802210901407</figcaption></figure><figure><img src="'+o+'" alt="image-20230802211518253" tabindex="0" loading="lazy"><figcaption>image-20230802211518253</figcaption></figure>',7),d=[c];function r(p,_){return a(),i("div",null,d)}const m=e(s,[["render",r],["__file","循坏依赖专题.html.vue"]]);export{m as default};
