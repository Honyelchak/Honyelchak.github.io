const n=JSON.parse(`{"key":"v-14a39cb8","path":"/algorithm/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%88%86.html","title":"二分","lang":"zh-CN","frontmatter":{"description":"二分 使用二分枚举 AcWing. 1090 绿色通道 https://www.acwing.com/activity/content/problem/content/1462/ 另外 Leetcode上有一道题为啥不能用二分做（似乎是因为有负数的存在，不符合单调性） #include&lt;cstdio&gt; #include&lt;vector&gt; #include&lt;algorithm&gt; #include&lt;cstring&gt; using namespace std; const int N = 100100; int q[N]; bool check(int k, vector&lt;int&gt;&amp; nums, int sum) { int hh = 0, tt = -1; for (int i = 1; i &lt;= nums.size(); i ++) { if (hh &lt;= tt &amp;&amp; i - q[hh] &gt; k) hh ++; while (hh &lt;= tt &amp;&amp; nums[q[tt]] &gt;= nums[i]) tt --; q[++ tt] = i; if (i &gt;= k &amp;&amp; sum &lt;= nums[i] - nums[q[hh]]) return true; } return false; } int shortestSubarray(vector&lt;int&gt;&amp; nums, int k) { int n = nums.size(); vector&lt;int&gt; s(n + 1); for (int i = 1; i &lt;= nums.size(); i ++) s[i] = s[i - 1] + nums[i - 1]; if (s[n] &lt; k) return -1; int l = 0, r = n; while(l &lt; r) { int mid = l + r &gt;&gt; 1; if (check(mid, s, k)) r = mid; else l = mid + 1; } return r; } int main() { int n, k, t; scanf(\\"%d%d\\", &amp;n, &amp;k); vector&lt;int&gt; nums; for (int i = 0; i &lt; n; i ++) { scanf(\\"%d\\", &amp;t); nums.push_back(t); } printf(\\"%d\\\\n\\", shortestSubarray(nums, k)); return 0; }","head":[["meta",{"property":"og:url","content":"https://yuejinzhao.cn/algorithm/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E4%BA%8C%E5%88%86.html"}],["meta",{"property":"og:site_name","content":"Honyelchak's Blog"}],["meta",{"property":"og:title","content":"二分"}],["meta",{"property":"og:description","content":"二分 使用二分枚举 AcWing. 1090 绿色通道 https://www.acwing.com/activity/content/problem/content/1462/ 另外 Leetcode上有一道题为啥不能用二分做（似乎是因为有负数的存在，不符合单调性） #include&lt;cstdio&gt; #include&lt;vector&gt; #include&lt;algorithm&gt; #include&lt;cstring&gt; using namespace std; const int N = 100100; int q[N]; bool check(int k, vector&lt;int&gt;&amp; nums, int sum) { int hh = 0, tt = -1; for (int i = 1; i &lt;= nums.size(); i ++) { if (hh &lt;= tt &amp;&amp; i - q[hh] &gt; k) hh ++; while (hh &lt;= tt &amp;&amp; nums[q[tt]] &gt;= nums[i]) tt --; q[++ tt] = i; if (i &gt;= k &amp;&amp; sum &lt;= nums[i] - nums[q[hh]]) return true; } return false; } int shortestSubarray(vector&lt;int&gt;&amp; nums, int k) { int n = nums.size(); vector&lt;int&gt; s(n + 1); for (int i = 1; i &lt;= nums.size(); i ++) s[i] = s[i - 1] + nums[i - 1]; if (s[n] &lt; k) return -1; int l = 0, r = n; while(l &lt; r) { int mid = l + r &gt;&gt; 1; if (check(mid, s, k)) r = mid; else l = mid + 1; } return r; } int main() { int n, k, t; scanf(\\"%d%d\\", &amp;n, &amp;k); vector&lt;int&gt; nums; for (int i = 0; i &lt; n; i ++) { scanf(\\"%d\\", &amp;t); nums.push_back(t); } printf(\\"%d\\\\n\\", shortestSubarray(nums, k)); return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-02T06:45:03.000Z"}],["meta",{"property":"article:author","content":"Honyelchak"}],["meta",{"property":"article:modified_time","content":"2023-12-02T06:45:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二分\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-02T06:45:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Honyelchak\\",\\"url\\":\\"https://yuejinzhao.cn\\"}]}"]]},"headers":[{"level":2,"title":"使用二分枚举","slug":"使用二分枚举","link":"#使用二分枚举","children":[]}],"git":{"createdTime":1701499503000,"updatedTime":1701499503000,"contributors":[{"name":"honyelchak","email":"554417388@qq.com","commits":1}]},"readingTime":{"minutes":0.73,"words":218},"filePathRelative":"algorithm/基础算法/二分.md","localizedDate":"2023年12月2日","excerpt":"<h1> 二分</h1>\\n<h2> 使用二分枚举</h2>\\n<p>AcWing. 1090 绿色通道</p>\\n<p>https://www.acwing.com/activity/content/problem/content/1462/</p>\\n<p>另外 Leetcode上有一道题为啥不能用二分做（似乎是因为有负数的存在，不符合单调性）</p>\\n<div class=\\"language-c++ line-numbers-mode\\" data-ext=\\"c++\\"><pre class=\\"language-c++\\"><code>#include&lt;cstdio&gt;\\n#include&lt;vector&gt;\\n#include&lt;algorithm&gt;\\n#include&lt;cstring&gt;\\n\\nusing namespace std;\\n\\nconst int N = 100100;\\n\\nint q[N];\\n\\n\\n\\nbool check(int k, vector&lt;int&gt;&amp; nums, int sum)\\n{\\n    int hh = 0, tt = -1;\\n    for (int i = 1; i &lt;= nums.size(); i ++)\\n    {\\n        if (hh &lt;= tt &amp;&amp; i - q[hh] &gt; k) hh ++;\\n        while (hh &lt;= tt &amp;&amp; nums[q[tt]] &gt;= nums[i]) tt --;\\n        q[++ tt] = i;\\n        if (i &gt;= k &amp;&amp; sum &lt;= nums[i] - nums[q[hh]]) return true;\\n    }\\n    return false;\\n}\\n\\nint shortestSubarray(vector&lt;int&gt;&amp; nums, int k) {\\n    int n = nums.size();\\n    vector&lt;int&gt; s(n + 1);\\n    for (int i = 1; i &lt;= nums.size(); i ++) s[i] = s[i - 1] + nums[i - 1];\\n\\n    if (s[n] &lt; k) return -1;\\n\\n    int l = 0, r = n;\\n    while(l &lt; r)\\n    {\\n        int mid = l + r &gt;&gt; 1;\\n        if (check(mid, s, k)) r = mid;\\n        else l = mid + 1;\\n    }\\n    \\n    return r;\\n}\\n\\n\\nint main()\\n{\\n    int n, k, t;\\n    scanf(\\"%d%d\\", &amp;n, &amp;k);\\n    vector&lt;int&gt; nums;\\n    \\n    for (int i = 0; i &lt; n; i ++)\\n    {\\n        scanf(\\"%d\\", &amp;t);\\n        nums.push_back(t);\\n    }\\n    \\n    printf(\\"%d\\\\n\\", shortestSubarray(nums, k));\\n    \\n    return 0;\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
