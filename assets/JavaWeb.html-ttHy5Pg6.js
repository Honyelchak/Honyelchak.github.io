import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,f as i}from"./app-XffPLay1.js";const r={},t=i('<h3 id="jsp-和-servlet-有什么区别" tabindex="-1"><a class="header-anchor" href="#jsp-和-servlet-有什么区别" aria-hidden="true">#</a> jsp 和 servlet 有什么区别？</h3><blockquote><p>Jsp就是一个Servlet程序！！！Servlet的技术可以用在Jsp程序中。Jsp的技术并不是全部适用于servlet程序！</p></blockquote><h4 id="jsp的特点" tabindex="-1"><a class="header-anchor" href="#jsp的特点" aria-hidden="true">#</a> JSP的特点</h4><p>JSP的运行必须交给tomcat服务器， 在tomcat的work目录中，存放jsp运行时的临时目录</p><h4 id="jsp执行过程" tabindex="-1"><a class="header-anchor" href="#jsp执行过程" aria-hidden="true">#</a> JSP执行过程</h4><p>第一次：</p><ul><li>客户端发送请求(.../index.jsp)</li><li>tomcat扫描jsp文件，然后将在work目录下将JSP文件翻译成Java源代码</li><li>将Java源代码编译成class文件</li><li>构造对象，调用相应的方法。</li></ul><p>第n次：</p><ul><li>构造对象，调用相应的方法。</li></ul><p>out.write(...)</p><h3 id="jsp-有哪些内置对象-作用分别是什么" tabindex="-1"><a class="header-anchor" href="#jsp-有哪些内置对象-作用分别是什么" aria-hidden="true">#</a> jsp 有哪些内置对象？作用分别是什么？</h3><p>9大内置对象</p><ul><li><p>request：对应 Java 类 javax.servlet.http.HttpServletRequest；客户端的请求信息：Http协议头信息、Cookie、请求参数等</p></li><li><p>response：对应 Java 类 javax.servlet.http.HttpServletRespons；用于服务端响应客户端请求，返回信息</p></li><li><p>pageContext：对应 Java 类 javax.servlet.jsp.PageContext；页面的上下文</p></li><li><p>session：对应 Java 类 javax.servlet.http.HttpSession；客户端与服务端之间的会话</p></li><li><p>application：对应 Java 类 javax.servlet.ServletContext；用于获取服务端应用生命周期的信息</p></li><li><p>out：对应 Java 类 javax.servlet.jsp.JspWriter；用于服务端传输内容到客户端的输出流</p></li><li><p>config：对应 Java 类 javax.servlet.ServletConfig；初始化时，Jsp 引擎向 Jsp 页面传递的信息</p></li><li><p>page：对应 Java 类 java.lang.Object；指向 Jsp 页面本身</p></li><li><p>exception：对应 Java 类 java.lang.Throwabl；页面发生异常，产生的异常对象</p></li></ul><h3 id="说一下-jsp-的-4-种作用域" tabindex="-1"><a class="header-anchor" href="#说一下-jsp-的-4-种作用域" aria-hidden="true">#</a> 说一下 jsp 的 4 种作用域？</h3><p><code>page域</code> 在这个作用域中存放的属性值，只能在当前页面中取出。</p><p><code>request域从请求创建到请求消亡</code></p><p><code>Session域</code>范围是一段客户端与服务器端持续链接的时间。</p><p><code>application域</code> 服务器web应用启动到停止，整个web应用中所有请求所涉及的页面。</p><h3 id="session-和-cookie-有什么区别" tabindex="-1"><a class="header-anchor" href="#session-和-cookie-有什么区别" aria-hidden="true">#</a> session 和 cookie 有什么区别？</h3><ul><li>session数据存储到服务器端</li><li>cookie数据存储到客户端</li></ul><p><strong>一般实际使用中，都是把关键信息保存在 session 里，其他信息加密保存到cookie中。</strong></p><h3 id="说一下-session-的工作原理" tabindex="-1"><a class="header-anchor" href="#说一下-session-的工作原理" aria-hidden="true">#</a> 说一下 session 的工作原理？</h3><p>session 是浏览器和服务器会话过程中，服务器分配的一块储存空间。服务器默认为浏览器在cookie中设置 sessionid，浏览器在向服务器请求过程中传输 cookie 包含 sessionid ，<strong>服务器根据 sessionid 获取出会话中存储的信息。</strong></p><ul><li><p>浏览器访问服务器的servlet时，服务器会自动创建session，并把sessionid通过cookie返回到浏览器。</p></li><li><p>服务器会默认给 session 一个过期时间，即从该 session 的会话在有效时间内没有再被访问就会被设置过超时，需要重新建立会话。</p><p>如 tomcat 的默认会话超时时间为30分钟。</p></li></ul><h3 id="如果客户端禁止-cookie-能实现-session-还能用吗" tabindex="-1"><a class="header-anchor" href="#如果客户端禁止-cookie-能实现-session-还能用吗" aria-hidden="true">#</a> 如果客户端禁止 cookie 能实现 session 还能用吗？</h3><h3 id="spring-mvc-和-struts-的区别是什么" tabindex="-1"><a class="header-anchor" href="#spring-mvc-和-struts-的区别是什么" aria-hidden="true">#</a> spring mvc 和 struts 的区别是什么？</h3><h3 id="如何避免-sql-注入" tabindex="-1"><a class="header-anchor" href="#如何避免-sql-注入" aria-hidden="true">#</a> 如何避免 sql 注入？</h3><h3 id="什么是-xss-攻击-如何避免" tabindex="-1"><a class="header-anchor" href="#什么是-xss-攻击-如何避免" aria-hidden="true">#</a> 什么是 XSS 攻击，如何避免？</h3><h3 id="什么是-csrf-攻击-如何避免" tabindex="-1"><a class="header-anchor" href="#什么是-csrf-攻击-如何避免" aria-hidden="true">#</a> 什么是 CSRF 攻击，如何避免？</h3><h3 id="转发与重定向的区别" tabindex="-1"><a class="header-anchor" href="#转发与重定向的区别" aria-hidden="true">#</a> 转发与重定向的区别</h3><h4 id="转发" tabindex="-1"><a class="header-anchor" href="#转发" aria-hidden="true">#</a> 转发</h4><p><strong>服务端行为</strong></p><ul><li>地址栏不会改变</li><li>转发<strong>只能转发到当前web应用内的资源</strong></li><li>可以将数据保存在request域对象中</li><li>转发只有一次请求</li></ul><h4 id="重定向" tabindex="-1"><a class="header-anchor" href="#重定向" aria-hidden="true">#</a> 重定向</h4><p><strong>客户端行为</strong></p><ul><li>地址栏会变</li><li>两次请求</li><li>不能在重定向的过程中，将数据保存到request中</li></ul>',36),o=[t];function l(n,p){return a(),s("div",null,o)}const c=e(r,[["render",l],["__file","JavaWeb.html.vue"]]);export{c as default};
